{"version":3,"sources":["TextGenerator.js","App.js","index.js"],"names":["select","arr","undefined","console","log","Math","floor","random","length","generateParagraph","chain","numWords","text","_seeds","w1","w2","i","w3","getNextWord","push","error","join","TextGenerator","props","numParas","paragraphs","generateText","pcount","wcount","map","para","key","chainData","require","ReactDOM","render","useState","setChain","setPcount","setWcount","useEffect","className","role","htmlFor","min","id","type","value","onChange","e","target","document","getElementById"],"mappings":"yy9iJAEA,SAASA,EAAOC,GAId,YAHYC,IAARD,GACFE,QAAQC,IAAI,iBAAkBH,GAEzBA,EAAII,KAAKC,MAAMD,KAAKE,SAAWN,EAAIO,SAa5C,SAASC,EAAkBC,EAAOC,GAGhC,IAFA,IAAIC,EAAOZ,EAAOU,EAAMG,QADkB,cAE3BD,EAF2B,GAErCE,EAFqC,KAEjCC,EAFiC,KAIpCC,EAAI,EACRA,EAAIL,GACwD,MAA5DC,EAAKA,EAAKJ,OAAS,GAAGI,EAAKA,EAAKJ,OAAS,GAAGA,OAAS,GACrDQ,IACA,CACA,IAAMC,EAAKC,EAAYR,EAAOI,EAAIC,GAClC,GAAmB,kBAARE,EACT,MAEFL,EAAKO,KAAKF,GALV,MAMW,CAACF,EAAIE,GAAfH,EAND,KAMKC,EANL,KAOqC,kBAA1BH,EAAKA,EAAKJ,OAAS,IAC5BL,QAAQiB,MAAM,oBAEhBjB,QAAQC,IAAI,OAAOQ,EAAKA,EAAKJ,OAAS,IACtCL,QAAQC,IAAI,IAAIY,EAAG,OAAmE,MAA5DJ,EAAKA,EAAKJ,OAAS,GAAGI,EAAKA,EAAKJ,OAAS,GAAGA,OAAS,IAGjF,OAAOI,EAAKS,KAAK,KAGnB,SAASH,EAAYR,EAAOI,EAAIC,GAC9B,YAAkBb,IAAdQ,EAAMI,SAAuCZ,IAAlBQ,EAAMI,GAAIC,GAChCf,EAAOU,EAAMG,QAEfb,EAAOU,EAAMI,GAAIC,IAGX,SAASO,EAAcC,GAEpC,OA7CF,SAAsBb,EAAOc,EAAUb,GACrC,GAAID,EAAMG,OAAQ,CAEhB,IADA,IAAIY,EAAa,GACRT,EAAI,EAAGA,EAAIQ,EAAUR,IAC5BS,EAAWN,KAAKV,EAAkBC,EAAOC,IAE3C,OAAOc,EAET,MAAO,CAAC,cAoCWC,CAAaH,EAAMb,MAAOa,EAAMI,OAAQJ,EAAMK,QAC/CC,KAAI,SAACC,EAAMd,GAAP,OAAa,uBAAGe,IAAKf,GAAIc,MCjDjD,IAAME,EAAYC,EAAQ,ICA1BC,IAASC,OAAO,mBDED,WAAgB,IAAD,EACFC,mBAAS,IADP,mBACrB1B,EADqB,KACd2B,EADc,OAEAD,mBAAS,GAFT,mBAErBT,EAFqB,KAEbW,EAFa,OAGAF,mBAAS,KAHT,mBAGrBR,EAHqB,KAGbW,EAHa,KAS5B,OAJAC,qBAAU,WACRH,EAASL,KACR,IAGD,yBAAKS,UAAU,OACb,4BAAQA,UAAU,SAASC,KAAK,cAC9B,yBAAKD,UAAU,mCACb,wBAAIA,UAAU,cAAd,YACA,kFAEF,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,0BACb,0BAAMA,UAAU,+BACd,kCACE,2BAAOE,QAAQ,UAAf,yBACA,2BAAOF,UAAU,eACjBG,IAAI,IACJC,GAAG,SACDC,KAAK,SACLC,MAAOpB,EACPqB,SAAU,SAAAC,GAAC,OAAIX,EAAUW,EAAEC,OAAOH,UAGpC,2BAAOJ,QAAQ,aAAf,wBACA,2BAAOF,UAAU,eACjBG,IAAI,IACFC,GAAG,YACHC,KAAK,SACLC,MAAOnB,EACPoB,SAAU,SAAAC,GAAC,OAAIV,EAAUU,EAAEC,OAAOH,UAGpC,4BAAQN,UAAU,cAAcK,KAAK,UAArC,mBAQR,yBAAKL,UAAU,kBACb,kBAACnB,EAAD,CACEZ,MAAOA,EACPiB,OAAQA,EACRC,OAAQA,KAIZ,2DAC0B,yDCzDhB,MAASuB,SAASC,eAAe,W","file":"static/js/main.c5475741.chunk.js","sourcesContent":["import React from 'react';\n\nfunction select(arr) {\n  if (arr === undefined) {\n    console.log('ARRRRRGH UNDEF', arr);\n  }\n  return arr[Math.floor(Math.random() * arr.length)];\n}\nfunction generateText(chain, numParas, numWords) {\n  if (chain._seeds) {\n    let paragraphs = [];\n    for (let i = 0; i < numParas; i++) {\n      paragraphs.push(generateParagraph(chain, numWords));\n    }\n    return paragraphs;\n  }\n  return ['Loading...'];\n}\n\nfunction generateParagraph(chain, numWords) {\n  let text = select(chain._seeds);\n  let [w1, w2] = text;\n  for (\n    let i = 0;\n    i < numWords ||\n    text[text.length - 1][text[text.length - 1].length - 1] !== '.';\n    i++\n  ) {\n    const w3 = getNextWord(chain, w1, w2);\n    if (typeof(w3) !== 'string') {\n      break;\n    }\n    text.push(w3);\n    [w1, w2] = [w2, w3];\n    if (typeof text[text.length - 1] !== 'string') {\n      console.error('WATTTTTTTTTTTTTT');\n    }\n    console.log(\"==> \",text[text.length - 1])\n    console.log(\"I\",i, \"DOT:\",text[text.length - 1][text[text.length - 1].length - 1] !== '.')\n  }\n\n  return text.join(' ');\n}\n\nfunction getNextWord(chain, w1, w2) {\n  if (chain[w1] === undefined || chain[w1][w2] === undefined) {\n    return select(chain._seeds);\n  }\n  return select(chain[w1][w2]);\n}\n\nexport default function TextGenerator(props) {\n  const paragraphs = generateText(props.chain, props.pcount, props.wcount);\n  return paragraphs.map((para, i) => <p key={i}>{para}</p>);\n}\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport TextGenerator from './TextGenerator';\n\nconst chainData = require('./data/chain.json');\n\nexport default function App() {\n  const [chain, setChain] = useState({});\n  const [pcount, setPcount] = useState(3);\n  const [wcount, setWcount] = useState(100);\n\n  useEffect(() => {\n    setChain(chainData);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"pure-g\" role=\"navigation\">\n        <div className=\"pure-u-md-7-12 pure-u-1-1 title\">\n          <h1 className=\"site-title\">HPLipsum</h1>\n          <h2>The H.P. Lovecraft-inspired Lorem Ipsum generator</h2>\n        </div>\n        <div className=\"pure-u-1-12\"></div>\n        <div className=\"pure-u-4-12 pure-u-1-1\" >\n          <form className=\"pure-form pure-form-stacked\">\n            <fieldset>\n              <label htmlFor=\"pCount\">Number of paragraphs:</label>\n              <input className=\"number-input\"\n              min=\"1\"\n              id=\"pCount\"\n                type=\"number\"\n                value={pcount}\n                onChange={e => setPcount(e.target.value)}\n              />\n\n              <label htmlFor=\"wordCount\">Words per paragraph:</label>\n              <input className=\"number-input\"\n              min=\"1\"\n                id=\"wordCount\"\n                type=\"number\"\n                value={wcount}\n                onChange={e => setWcount(e.target.value)}\n              />\n\n              <button className=\"pure-button\" type=\"button\">\n                Summon Text\n              </button>\n            </fieldset>\n          </form>\n        </div>\n      </header>\n\n      <div className=\"generated-text\">\n        <TextGenerator\n          chain={chain}\n          pcount={pcount}\n          wcount={wcount}\n        ></TextGenerator>\n      </div>\n\n      <footer>\n        Created by Marc Majcher <span>&lt;majcher@gmail.com&gt;</span>\n      </footer>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}