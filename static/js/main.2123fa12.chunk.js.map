{"version":3,"sources":["TextGenerator.js","index.js","App.js"],"names":["select","arr","console","log","Math","floor","random","length","generateParagraph","chain","numWords","text","_seeds","w1","w2","i","endsWith","w3","getNextWord","push","join","TextGenerator","props","numParas","paragraphs","generateText","pcount","wcount","map","para","key","ReactDOM","render","useState","setChain","setPcount","setWcount","useEffect","fetch","then","res","json","className","role","htmlFor","id","type","value","onChange","e","target","document","getElementById"],"mappings":"4JAEA,SAASA,EAAOC,GAEd,OADAC,QAAQC,IAAIF,GACLA,EAAIG,KAAKC,MAAMD,KAAKE,SAAWL,EAAIM,SAa5C,SAASC,EAAkBC,EAAOC,GAGhC,IAFA,IAAIC,EAAOX,EAAOS,EAAMG,QADkB,cAE3BD,EAF2B,GAErCE,EAFqC,KAEjCC,EAFiC,KAGjCC,EAAI,EAAGA,EAAIL,IAAaC,EAAKA,EAAKJ,OAAS,GAAGS,SAAS,KAAMD,IAAK,CACzE,IAAME,EAAKC,EAAYT,EAAOI,EAAIC,GAClCH,EAAKQ,KAAKF,GAF+D,MAG9D,CAACH,EAAIG,GAAfJ,EAHwE,KAGpEC,EAHoE,KAM3E,OAAOH,EAAKS,KAAK,KAGnB,SAASF,EAAYT,EAAOI,EAAIC,GAC9B,OAAOd,EAAOS,EAAMI,GAAIC,IAGX,SAASO,EAAcC,GAEpC,OA7BF,SAAsBb,EAAOc,EAAUb,GACrC,GAAID,EAAMG,OAAQ,CAEhB,IADA,IAAIY,EAAa,GACRT,EAAI,EAAGA,EAAIQ,EAAUR,IAC5BS,EAAWL,KAAKX,EAAkBC,EAAOC,IAE3C,OAAOc,EAET,MAAO,CAAC,cAoBWC,CAAaH,EAAMb,MAAOa,EAAMI,OAAQJ,EAAMK,QAC/CC,KAAI,SAACC,EAAMd,GAAP,OAAa,uBAAGe,IAAKf,GAAIc,MC/BjDE,IAASC,OAAO,mBCAD,WACb,IAD4B,EAEFC,mBAAS,IAFP,mBAErBxB,EAFqB,KAEdyB,EAFc,OAGAD,mBAAS,GAHT,mBAGrBP,EAHqB,KAGbS,EAHa,OAIAF,mBAAS,KAJT,mBAIrBN,EAJqB,KAIbS,EAJa,KAY5B,OANAC,qBAAU,WACRC,MANgB,mBAObC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GAAI,OAAIP,EAASO,QACxB,IAGD,yBAAKC,UAAU,OACb,4BAAQA,UAAU,SAASC,KAAK,cAC9B,yBAAKD,UAAU,qBACb,wBAAIA,UAAU,cAAd,YACA,kFAEF,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,eACb,0BAAMA,UAAU,+BACd,kCACE,2BAAOE,QAAQ,UAAf,yBACA,2BACEC,GAAG,SACHC,KAAK,SACLC,MAAOrB,EACPsB,SAAU,SAAAC,GAAC,OAAId,EAAUc,EAAEC,OAAOH,UAGpC,2BAAOH,QAAQ,aAAf,wBACA,2BACEC,GAAG,YACHC,KAAK,SACLC,MAAOpB,EACPqB,SAAU,SAAAC,GAAC,OAAIb,EAAUa,EAAEC,OAAOH,UAGpC,4BAAQL,UAAU,cAAcI,KAAK,UAArC,mBAQR,yBAAKJ,UAAU,kBACb,kBAACrB,EAAD,CACEZ,MAAOA,EACPiB,OAAQA,EACRC,OAAQA,KAIZ,2DAC0B,yDDxDhB,MAASwB,SAASC,eAAe,U","file":"static/js/main.2123fa12.chunk.js","sourcesContent":["import React from 'react';\n\nfunction select(arr) {\n  console.log(arr)\n  return arr[Math.floor(Math.random() * arr.length)];\n}\nfunction generateText(chain, numParas, numWords) {\n  if (chain._seeds) {\n    let paragraphs = [];\n    for (let i = 0; i < numParas; i++) {\n      paragraphs.push(generateParagraph(chain, numWords));\n    }\n    return paragraphs;\n  }\n  return ['Loading...'];\n}\n\nfunction generateParagraph(chain, numWords) {\n  let text = select(chain._seeds);\n  let [w1, w2] = text;\n  for (let i = 0; i < numWords || !text[text.length - 1].endsWith('.'); i++) {\n    const w3 = getNextWord(chain, w1, w2);\n    text.push(w3);\n    [w1, w2] = [w2, w3];\n  }\n\n  return text.join(' ');\n}\n\nfunction getNextWord(chain, w1, w2) {\n  return select(chain[w1][w2]);\n}\n\nexport default function TextGenerator(props) {\n  const paragraphs = generateText(props.chain, props.pcount, props.wcount);\n  return paragraphs.map((para, i) => <p key={i}>{para}</p>);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport TextGenerator from './TextGenerator';\n\nexport default function App() {\n  const chainFile = 'data/chain.json';\n  const [chain, setChain] = useState({});\n  const [pcount, setPcount] = useState(3);\n  const [wcount, setWcount] = useState(100);\n\n  useEffect(() => {\n    fetch(chainFile)\n      .then(res => res.json())\n      .then(json => setChain(json));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"pure-g\" role=\"navigation\">\n        <div className=\"pure-u-7-12 title\">\n          <h1 className=\"site-title\">HPLipsum</h1>\n          <h2>The H.P. Lovecraft-inspired Lorem Ipsum generator</h2>\n        </div>\n        <div className=\"pure-u-1-12\"></div>\n        <div className=\"pure-u-4-12\">\n          <form className=\"pure-form pure-form-stacked\">\n            <fieldset>\n              <label htmlFor=\"pCount\">Number of paragraphs:</label>\n              <input\n                id=\"pCount\"\n                type=\"number\"\n                value={pcount}\n                onChange={e => setPcount(e.target.value)}\n              />\n\n              <label htmlFor=\"wordCount\">Words per paragraph:</label>\n              <input\n                id=\"wordCount\"\n                type=\"number\"\n                value={wcount}\n                onChange={e => setWcount(e.target.value)}\n              />\n\n              <button className=\"pure-button\" type=\"button\">\n                Summon Text\n              </button>\n            </fieldset>\n          </form>\n        </div>\n      </header>\n\n      <div className=\"generated-text\">\n        <TextGenerator\n          chain={chain}\n          pcount={pcount}\n          wcount={wcount}\n        ></TextGenerator>\n      </div>\n\n      <footer>\n        Created by Marc Majcher <span>&lt;majcher@gmail.com&gt;</span>\n      </footer>\n    </div>\n  );\n}\n"],"sourceRoot":""}