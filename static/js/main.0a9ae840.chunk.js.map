{"version":3,"sources":["TextGenerator.js","App.js","index.js"],"names":["select","arr","Math","floor","random","length","generateParagraph","chain","numWords","text","_seeds","w1","w2","i","w3","getNextWord","push","join","undefined","TextGenerator","props","args","pcount","wcount","paragraphs","generateText","map","p","key","chainData","require","ReactDOM","render","useState","setChain","setPcount","setWcount","Date","now","time","setTime","useEffect","className","role","htmlFor","min","type","value","onChange","e","target","onClick","document","getElementById"],"mappings":"2w9iJAEA,SAASA,EAAOC,GACd,OAAOA,EAAMA,EAAIC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,SAAW,IAe7D,SAASC,EAAkBC,EAAOC,GAGhC,IAFA,IAAIC,EAAOT,EAAOO,EAAMG,QADkB,cAE3BD,EAF2B,GAErCE,EAFqC,KAEjCC,EAFiC,KAIpCC,EAAI,EACRA,EAAIL,GACwD,MAA5DC,EAAKA,EAAKJ,OAAS,GAAGI,EAAKA,EAAKJ,OAAS,GAAGA,OAAS,GACrDQ,IACA,CACA,IAAMC,EAAKC,EAAYR,EAAOI,EAAIC,GAClCH,EAAKO,KAAKF,GAFV,MAGW,CAACF,EAAIE,GAAfH,EAHD,KAGKC,EAHL,KAMF,OAAOH,EAAKQ,KAAK,KAGnB,SAASF,EAAYR,EAAOI,EAAIC,GAC9B,YAAkBM,IAAdX,EAAMI,SAAuCO,IAAlBX,EAAMI,GAAIC,GAChCZ,EAAOO,EAAMG,QAEfV,EAAOO,EAAMI,GAAIC,IAGX,SAASO,EAAcC,GACpC,OArCF,SAAsBC,GAAO,IACnBd,EAA0Bc,EAA1Bd,MAAOe,EAAmBD,EAAnBC,OAAQC,EAAWF,EAAXE,OACvB,GAAIhB,EAAMG,OAAQ,CAEhB,IADA,IAAIc,EAAa,GACRX,EAAI,EAAGA,EAAIS,EAAQT,IAC1BW,EAAWR,KAAKV,EAAkBC,EAAOgB,IAE3C,OAAOC,EAET,MAAO,CAAC,cA4BDC,CAAaL,GAAOM,KAAI,SAACC,EAAGd,GAAJ,OAAU,uBAAGe,IAAKf,GAAIc,MCvCvD,IAAME,EAAYC,EAAQ,ICA1BC,IAASC,OAAO,mBDED,WAAgB,IAAD,EACFC,mBAAS,IADP,mBACrB1B,EADqB,KACd2B,EADc,OAEAD,mBAAS,GAFT,mBAErBX,EAFqB,KAEba,EAFa,OAGAF,mBAAS,KAHT,mBAGrBV,EAHqB,KAGba,EAHa,OAIJH,mBAASI,KAAKC,OAJV,mBAIrBC,EAJqB,KAIfC,EAJe,KAU5B,OAJAC,qBAAU,WACRP,EAASL,KACR,IAGD,yBAAKa,UAAU,OACb,4BAAQA,UAAU,SAASC,KAAK,cAC9B,yBAAKD,UAAU,mCACb,wBAAIA,UAAU,cAAd,YACA,kFAEF,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,4BACb,0BAAMA,UAAU,+BACd,kCACE,2BAAOE,QAAQ,UAAf,yBACA,2BACEF,UAAU,eACVG,IAAI,IACJC,KAAK,SACLC,MAAOzB,EACP0B,SAAU,SAAAC,GAAC,OAAId,EAAUc,EAAEC,OAAOH,UAGpC,2BAAOH,QAAQ,aAAf,6BACA,2BACEF,UAAU,eACVG,IAAI,IACJC,KAAK,SACLC,MAAOxB,EACPyB,SAAU,SAAAC,GAAC,OAAIb,EAAUa,EAAEC,OAAOH,UAIpC,4BACEL,UAAU,cACVI,KAAK,SACLK,QAAS,kBAAMX,EAAQH,KAAKC,SAH9B,mBAYR,yBAAKI,UAAU,kBACb,kBAACvB,EAAD,CACEZ,MAAOA,EACPe,OAAQA,EACRC,OAAQA,EACRgB,KAAMA,KAIV,2DAC0B,yDChEhB,MAASa,SAASC,eAAe,W","file":"static/js/main.0a9ae840.chunk.js","sourcesContent":["import React from 'react';\n\nfunction select(arr) {\n  return arr ? arr[Math.floor(Math.random() * arr.length)] : '.';\n}\n\nfunction generateText(args) {\n  const { chain, pcount, wcount } = args;\n  if (chain._seeds) {\n    let paragraphs = [];\n    for (let i = 0; i < pcount; i++) {\n      paragraphs.push(generateParagraph(chain, wcount));\n    }\n    return paragraphs;\n  }\n  return ['Loading...'];\n}\n\nfunction generateParagraph(chain, numWords) {\n  let text = select(chain._seeds);\n  let [w1, w2] = text;\n  for (\n    let i = 0;\n    i < numWords ||\n    text[text.length - 1][text[text.length - 1].length - 1] !== '.';\n    i++\n  ) {\n    const w3 = getNextWord(chain, w1, w2);\n    text.push(w3);\n    [w1, w2] = [w2, w3];\n  }\n\n  return text.join(' ');\n}\n\nfunction getNextWord(chain, w1, w2) {\n  if (chain[w1] === undefined || chain[w1][w2] === undefined) {\n    return select(chain._seeds);\n  }\n  return select(chain[w1][w2]);\n}\n\nexport default function TextGenerator(props) {\n  return generateText(props).map((p, i) => <p key={i}>{p}</p>);\n}\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport TextGenerator from './TextGenerator';\n\nconst chainData = require('./data/chain.json');\n\nexport default function App() {\n  const [chain, setChain] = useState({});\n  const [pcount, setPcount] = useState(3);\n  const [wcount, setWcount] = useState(100);\n  const [time, setTime] = useState(Date.now());\n\n  useEffect(() => {\n    setChain(chainData);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"pure-g\" role=\"navigation\">\n        <div className=\"pure-u-md-7-12 pure-u-1-1 title\">\n          <h1 className=\"site-title\">HPLipsum</h1>\n          <h2>The H.P. Lovecraft-inspired Lorem Ipsum generator</h2>\n        </div>\n        <div className=\"pure-u-1-12\"></div>\n        <div className=\"pure-u-md-1-3 pure-u-1-1\">\n          <form className=\"pure-form pure-form-stacked\">\n            <fieldset>\n              <label htmlFor=\"pCount\">Number of paragraphs:</label>\n              <input\n                className=\"number-input\"\n                min=\"1\"\n                type=\"number\"\n                value={pcount}\n                onChange={e => setPcount(e.target.value)}\n              />\n\n              <label htmlFor=\"wordCount\">Min. words per paragraph:</label>\n              <input\n                className=\"number-input\"\n                min=\"1\"\n                type=\"number\"\n                value={wcount}\n                onChange={e => setWcount(e.target.value)}\n              />\n\n              {/* This feels so dirty. */}\n              <button\n                className=\"pure-button\"\n                type=\"button\"\n                onClick={() => setTime(Date.now())}\n              >\n                Summon Text\n              </button>\n            </fieldset>\n          </form>\n        </div>\n      </header>\n\n      <div className=\"generated-text\">\n        <TextGenerator\n          chain={chain}\n          pcount={pcount}\n          wcount={wcount}\n          time={time}\n        ></TextGenerator>\n      </div>\n\n      <footer>\n        Created by Marc Majcher <span>&lt;majcher@gmail.com&gt;</span>\n      </footer>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}