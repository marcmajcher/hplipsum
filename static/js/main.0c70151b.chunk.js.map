{"version":3,"sources":["Markov.js","TextGenerator.js","App.js","index.js"],"names":["generateText","args","chain","pcount","wcount","_seeds","paragraphs","i","push","this","generateParagraph","numWords","text","select","slice","w1","w2","length","w3","getNextWord","join","undefined","arr","Math","floor","random","indexWords","words","TextGenerator","props","Markov","map","p","key","chainData","require","ReactDOM","render","useState","setChain","setPcount","setWcount","Date","now","time","setTime","useEffect","console","log","className","role","htmlFor","min","type","value","onChange","e","target","onClick","document","getElementById"],"mappings":"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","file":"static/js/main.0c70151b.chunk.js","sourcesContent":["export default {\n  generateText(args) {\n    const { chain, pcount, wcount } = args;\n    if (chain._seeds) {\n      let paragraphs = [];\n      for (let i = 0; i < pcount; i++) {\n        paragraphs.push(this.generateParagraph(chain, wcount));\n      }\n      return paragraphs;\n    }\n    return ['Loading...'];\n  },\n  generateParagraph(chain, numWords) {\n    const text = this.select(chain._seeds).slice(0);\n    let [w1, w2] = text;\n    for (\n      let i = 0;\n      i < numWords ||\n      text[text.length - 1][text[text.length - 1].length - 1] !== '.';\n      i++\n    ) {\n      const w3 = this.getNextWord(chain, w1, w2);\n      if (typeof w3 === 'string') {\n        text.push(w3);\n        [w1, w2] = [w2, w3];\n      } else {\n        text.push(w3[0]);\n        text.push(w3[1]);\n        [w1, w2] = w3;\n      }\n    }\n    return text.join(' ');\n  },\n  getNextWord(chain, w1, w2) {\n    if (chain[w1] === undefined || chain[w1][w2] === undefined) {\n      return this.select(chain._seeds);\n    }\n    return this.select(chain[w1][w2]);\n  },\n  select(arr) {\n    return arr ? arr[Math.floor(Math.random() * arr.length)] : '.';\n  },\n  indexWords(chain, words) {\n    if (!chain._seeds) {\n      chain._seeds = [];\n    }\n    chain._seeds.push([words[0], words[1]]);\n\n    for (let i = 0; i < words.length - 2; i++) {\n      const [w1, w2, w3] = [words[i], words[i + 1], words[i + 2]];\n      if (!(w1 in chain)) {\n        chain[w1] = {};\n      }\n      if (!(w2 in chain[w1])) {\n        chain[w1][w2] = [];\n      }\n      chain[w1][w2].push(w3);\n    }\n  },\n};\n","import React from 'react';\nimport Markov from '../src/Markov';\n\nexport default function TextGenerator(props) {\n  return Markov.generateText(props).map((p, i) => <p key={i}>{p}</p>);\n}\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport TextGenerator from './TextGenerator';\n\nconst chainData = require('./data/chain.json');\n\nexport default function App() {\n  const [chain, setChain] = useState({});\n  const [pcount, setPcount] = useState(3);\n  const [wcount, setWcount] = useState(100);\n  const [time, setTime] = useState(Date.now());\n\n  useEffect(() => {\n    console.log('fthagn!');\n    setChain(chainData);\n  }, []);\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"pure-g\" role=\"navigation\">\n        <div className=\"pure-u-md-7-12 pure-u-1-1 title\">\n          <h1 className=\"site-title\">HPLipsum</h1>\n          <h2>The H.P. Lovecraft-inspired Lorem Ipsum generator</h2>\n        </div>\n        <div className=\"pure-u-1-12\"></div>\n        <div className=\"pure-u-md-1-3 pure-u-1-1\">\n          <form className=\"pure-form pure-form-stacked\">\n            <fieldset>\n              <label htmlFor=\"pCount\">Number of paragraphs:</label>\n              <input\n                className=\"number-input\"\n                min=\"1\"\n                type=\"number\"\n                value={pcount}\n                onChange={e => setPcount(e.target.value)}\n              />\n\n              <label htmlFor=\"wordCount\">Min. words per paragraph:</label>\n              <input\n                className=\"number-input\"\n                min=\"1\"\n                type=\"number\"\n                value={wcount}\n                onChange={e => setWcount(e.target.value)}\n              />\n\n              {/* This feels so dirty. */}\n              <button\n                className=\"pure-button\"\n                type=\"button\"\n                onClick={() => setTime(Date.now())}\n              >\n                Summon Text\n              </button>\n            </fieldset>\n          </form>\n        </div>\n      </header>\n\n      <div className=\"generated-text\">\n        <TextGenerator\n          chain={chain}\n          pcount={pcount}\n          wcount={wcount}\n          time={time}\n        ></TextGenerator>\n      </div>\n\n      <footer>\n        Created by Marc Majcher <span>&lt;majcher@gmail.com&gt;</span>\n      </footer>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}